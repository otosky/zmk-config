/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#define BASE 0
#define NUM 1
#define SYM 2
#define NAVI 3
#define FUNC 4

&mt {
  flavor = "tap-preferred";
  tapping_term_ms = <175>;
};

/ { 

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };
        
        combo_caps {
            timeout-ms = <50>;
            key-positions = <30 32>;
            bindings = <&kp CAPS>;
        };

        combo_z {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp Z>;
        };
        
        combo_b {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp B>;
        };

        combo_v {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp V>;
        };

        combo_j {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp J>;
        };

        combo_k {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp K>;
        };

        combo_slash {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp SLASH>;
        };

        combo_reset_left {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&reset>;
        };

        combo_reset_right {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&reset>;
        };

        combo_boot_left {
            timeout-ms = <50>;
            key-positions = <0 20>;
            bindings = <&bootloader>;
        };

        combo_boot_right {
            timeout-ms = <50>;
            key-positions = <9 29>;
            bindings = <&bootloader>;
        };

    };

        keymap {
                compatible = "zmk,keymap";
                
       		base {
		bindings = <
		&kp Q       &kp W      &kp F       &kp P          &kp B 	         &kp J       &kp L        &kp U       &kp Y      &kp SQT 
		&mt LMETA A &mt LALT R &mt LCTRL S &mt LSHIFT T   &kp G 	         &kp M       &mt LSHIFT N &mt LCTRL E &mt LALT I &mt LMETA O
		&kp Z       &kp X      &kp C       &kp D          &kp V		         &kp K       &kp H        &kp COMMA   &kp DOT    &kp SLASH
          				                     &lt NAVI SPC   &lt FUNC TAB     &lt SYM RET &lt NUM BSPC
                                       
		>;
		};

          number {
		bindings = <
		&kp LBKT    &kp N7     &kp N8      &kp N9         &kp RBKT 	  &none   &kp GRAVE    &none       &none      &none 
		&kp SEMI    &kp N4     &kp N5      &kp N6         &kp EQUAL   &none   &kp LSHIFT   &kp LCTRL   &kp LALT   &kp LMETA 
		&kp GRAVE   &kp N1     &kp N2      &kp N3         &kp BSLH 	  &none   &none        &kp COMMA   &kp DOT    &kp RALT
          				                     &kp N0         &kp MINUS   &none   &none
		>;
		};
		
		      symbol {
		bindings = <
		&kp LBRC    &kp AMPS   &kp ASTRK   &kp LPAR       &kp RBRC 	  &none   &kp TILDE    &kp PIPE    &kp BSLH   &none 
		&kp COLON   &kp DLLR   &kp PRCNT   &kp CARET      &kp PLUS    &none   &kp LSHIFT   &kp LCTRL   &kp LALT   &kp LMETA 
		&kp TILDE   &kp EXCL   &kp AT      &kp HASH       &kp PIPE 	  &none   &none        &kp COMMA   &kp DOT    &kp RALT
          				                     &kp RPAR       &kp UNDER   &none   &none
		>;
		};	
		
		      navi {
		bindings = <
		&bt BT_CLR  &none      &none       &none          &none       &kp K_REDO &kp K_PASTE  &kp K_COPY  &kp K_CUT  &kp K_UNDO
		&kp LMETA   &kp LALT   &kp LCTRL   &kp LSHIFT     &none       &kp LEFT   &kp DOWN     &kp UP      &kp RIGHT  &kp CAPS
		&none       &kp RALT   &none       &none          &none       &kp HOME   &kp PG_DN    &kp PG_UP   &kp END    &kp INS
          				                     &none          &none       &kp ESC    &kp BSPC
		>;
		};

		      func {
		bindings = <
		&kp F12     &kp F7     &kp F8      &kp F9         &none       &bt BT_NXT &bt BT_PRV   &none       &none      &none
		&kp F11     &kp F4     &kp F5      &kp F6         &none       &none      &kp LSHIFT   &kp LCTRL   &kp LALT   &kp LMETA
		&kp F10     &kp F1     &kp F2      &kp F3         &none       &none      &none        &none       &none      &none
          				                     &none          &none       &none      &none
		>;
		};

	};
};
